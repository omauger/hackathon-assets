apiVersion: v1
kind: Namespace
metadata:
  name: hackathon-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: hackathon-api
---
#	Copyright 2017, Google, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: fast
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
---
#	Copyright 2016, Google, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: hackathon-api
  labels:
    name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: hackathon-api
  labels:
    app: mongo
spec:
  serviceName: "mongo"
  selector:
    matchLabels:
      app: mongo
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "app=mongo"
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "fast"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1000Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-index
  namespace: hackathon-api
spec:
  template:
    spec:
      containers:
        - name: mongo-index
          image: mongoclient/mongoclient
          command:
            - "sh"
            - "-c"
            - >
              sleep 60;
              MASTER=`mongo --host mongo-0.mongo --quiet --eval "db.isMaster().ismaster"`;
              if $MASTER; then
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "donatorName": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "amount": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "moneyType": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "pdfRef": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "donatorName": 1, "moneyType": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "donatorName": 1, "amount": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "amount": 1, "moneyType": 1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "donatorName": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "amount": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "moneyType": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "pdfRef": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "donatorName": -1, "moneyType": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "donatorName": -1, "amount": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.createIndex({ "amount": -1, "moneyType": -1 })' donation;
                mongo --host mongo-0.mongo --eval 'db.donations.aggregate([{ $indexStats: { }}])' donation;
              fi
      restartPolicy: Never
  backoffLimit: 4